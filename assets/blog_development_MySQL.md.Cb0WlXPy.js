import{_ as a,c as s,o as e,a4 as n}from"./chunks/framework.BX6OBtZC.js";const g=JSON.parse('{"title":"MySQL基本操作","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"blog/development/MySQL.md","filePath":"blog/development/MySQL.md"}'),t={name:"blog/development/MySQL.md"},l=n(`<h1 id="mysql基本操作" tabindex="-1">MySQL基本操作 <a class="header-anchor" href="#mysql基本操作" aria-label="Permalink to &quot;MySQL基本操作&quot;">​</a></h1><hr><h4 id="查询" tabindex="-1">查询 <a class="header-anchor" href="#查询" aria-label="Permalink to &quot;查询&quot;">​</a></h4><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>查表   select * from 表名</span></span>
<span class="line"><span>具体查字段名  select * from 表名 where 字段名</span></span></code></pre></div><h5 id="in" tabindex="-1">in <a class="header-anchor" href="#in" aria-label="Permalink to &quot;in&quot;">​</a></h5><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>eg: select * from 表名 where not 字段名 in (select f_id from 表名2 where 字段名2 = 11) -- 表达式</span></span></code></pre></div><h5 id="查看所有列-注释" tabindex="-1">查看所有列 -- 注释 <a class="header-anchor" href="#查看所有列-注释" aria-label="Permalink to &quot;查看所有列 -- 注释&quot;">​</a></h5><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>show full columns from 表名</span></span></code></pre></div><h5 id="条件查询" tabindex="-1">条件查询 <a class="header-anchor" href="#条件查询" aria-label="Permalink to &quot;条件查询&quot;">​</a></h5><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>比较运算符 &lt;、&gt;、&gt;=、&lt;=、!、=、</span></span>
<span class="line"><span>eg: select * from 表名 where 字段名 = 123</span></span>
<span class="line"><span>逻辑运算符 and--逻辑且、or--逻辑或、not--逻辑非</span></span>
<span class="line"><span>eg: select * from 表名 where not 字段名 = 123 and 字段2 = 3</span></span></code></pre></div><h5 id="模糊查询" tabindex="-1">模糊查询 <a class="header-anchor" href="#模糊查询" aria-label="Permalink to &quot;模糊查询&quot;">​</a></h5><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>like %--替换一个或多个、__--占位符替换一个</span></span>
<span class="line"><span>eg: select * from 表名 where  字段名 like &#39;张%&#39;</span></span>
<span class="line"><span>rlike--正则</span></span></code></pre></div><h5 id="范围查询" tabindex="-1">范围查询 <a class="header-anchor" href="#范围查询" aria-label="Permalink to &quot;范围查询&quot;">​</a></h5><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>between and </span></span>
<span class="line"><span>eg:select * from 表名 where 字段名 between xx and xx</span></span></code></pre></div><h5 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h5><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>order by -- asc(升序)/desc(降序) </span></span>
<span class="line"><span>eg:select * from 表名 where 字段名1,字段名2 order by desc</span></span></code></pre></div><h5 id="分组" tabindex="-1">分组 <a class="header-anchor" href="#分组" aria-label="Permalink to &quot;分组&quot;">​</a></h5><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>group by -- count(*)</span></span>
<span class="line"><span>eg:select count(*),字段 from 表名  group by 字段</span></span>
<span class="line"><span>排序 eg:select count(*),字段 from 表名 where  group by 字段 order by count(*) desc</span></span></code></pre></div><h5 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h5><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>-- 时间处理</span></span>
<span class="line"><span>DATE_FORMAT(f_create_time,&#39;%Y-%m-%d&#39;) -- 2021-08-11</span></span></code></pre></div>`,20),i=[l];function p(o,c,d,h,r,u){return e(),s("div",null,i)}const b=a(t,[["render",p]]);export{g as __pageData,b as default};
