import{_ as e,c as o,o as c,a4 as d}from"./chunks/framework.BX6OBtZC.js";const C=JSON.parse('{"title":"BFC","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"blog/study/CSS/BFC.md","filePath":"blog/study/CSS/BFC.md"}'),a={name:"blog/study/CSS/BFC.md"},t=d('<h1 id="bfc" tabindex="-1">BFC <a class="header-anchor" href="#bfc" aria-label="Permalink to &quot;BFC&quot;">​</a></h1><hr><h3 id="bfc是什么" tabindex="-1">BFC是什么 <a class="header-anchor" href="#bfc是什么" aria-label="Permalink to &quot;BFC是什么&quot;">​</a></h3><p>BFC全称 Block Formatting Context 又名 “ 块级格式化上下文 ” 简单来说，BFC是一个完全独立的空间，里面的子元素不会影响到外面的布局。</p><h3 id="怎么触发一个bfc" tabindex="-1">怎么触发一个BFC <a class="header-anchor" href="#怎么触发一个bfc" aria-label="Permalink to &quot;怎么触发一个BFC&quot;">​</a></h3><ol><li>根元素（<code>html</code>），包括含body的元素</li><li>设置浮动（<code>float</code>），且值不为<code>none</code>（为<code>left</code>、<code>right</code>）</li><li>设置定位（<code>position</code>），且值不为<code>static</code>、<code>relative</code>（为<code>absolute</code>，<code>fiexd</code>）</li><li>设置<code>display</code>为这些值：<code>flow-root</code>、<code>inline-block</code>、<code>flex</code>、<code>grid</code>、<code>table</code>、<code>table-cell</code>、<code>table-caption</code></li><li>设置<code>overflow</code>，且值不为<code>visible</code>（为<code>auto</code>、<code>hidden</code>、<code>scroll</code>）</li></ol><h3 id="bfc有那些特征" tabindex="-1">BFC有那些特征 <a class="header-anchor" href="#bfc有那些特征" aria-label="Permalink to &quot;BFC有那些特征&quot;">​</a></h3><ol><li>属于同一个BFC的两个相邻容器的上下margin可能会重叠 -&gt; 解决外边距的塌陷问题</li><li>计算BFC高度时浮动元素也会被计算 -&gt; 解决父元素高度塌陷问题</li><li>BFC的区域不会与浮动容器发生重叠 -&gt; 解决浮动重叠问题</li><li>所有属于BFC中的盒子默认左对齐，并且它们的左边距可以触及到容器的左边线。最后一个盒子，尽管是浮动的，但依然遵循这个原则</li><li>BFC是独立容器，容器内部元素不会影响容器外部元素</li></ol>',8),l=[t];function i(r,n,s,h,_,b){return c(),o("div",null,l)}const B=e(a,[["render",i]]);export{C as __pageData,B as default};
