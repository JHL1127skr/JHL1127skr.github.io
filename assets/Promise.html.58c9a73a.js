import{_ as n,o as s,c as a,a as t}from"./app.bb765282.js";const e={},p=t(`<h1 id="promise-\u4E0Easync-await" tabindex="-1"><a class="header-anchor" href="#promise-\u4E0Easync-await" aria-hidden="true">#</a> Promise \u4E0Easync/await</h1><hr><h3 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h3><p><strong>1\u3001\u72B6\u6001</strong></p><ul><li>\u7B49\u5F85\u4E2D\uFF1Apending</li><li>\u6210\u529F\uFF1Aresolved</li><li>\u5931\u8D25\uFF1Arejected</li></ul><p><strong>2\u3001\u539F\u578B\u65B9\u6CD5</strong></p><ul><li>\u6210\u529F\u56DE\u8C03 <code>Promise.prototype.then()</code></li><li>\u5931\u8D25\u56DE\u8C03\uFF1A<code>Promise.prototype.catch() </code></li><li>\u4E0D\u7BA1\u6210\u529F\u6216\u8005\u5931\u8D25\uFF1A<code>Promise.prototype.finally() </code></li></ul><p><strong>3\u3001\u9759\u6001\u65B9\u6CD5\uFF08all\u3001rece\u3001allSettled\u3001any\uFF09</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span>p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">//\u5168\u90E8\u6210\u529F p\u7684\u72B6\u6001\u53D8\u4E3A resolved \uFF0C\u53EA\u8981\u6709\u4E00\u4E2A\u5931\u8D25 \u53D8\u6210 rejected</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span>p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">//\u6570\u7EC4\u4E2D\u7684\u5B9E\u4F8B\u8C01\u7684\u72B6\u6001\u5148\u6539\u53D8 \u5C31\u4F1A\u5F71\u54CD\u5230p\u7684\u72B6\u6001\uFF0C\u53EF\u4EE5\u505A \u6307\u5B9A\u65F6\u95F4\u6CA1\u6709\u8FD4\u56DE\u5C31\u629B\u51FA\u4E00\u4E2Areject</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span>p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">//\u4E0D\u7BA1\u6210\u529F\u6216\u662F\u5931\u8D25 \u90FD\u4F1A\u7B49\u5230\u6570\u7EC4\u4E2D\u6240\u6709\u7684\u6267\u884C\u5B8C\u6BD5\u624D\u4F1A\u8FD4\u56DE\u72B6\u6001 \u8FD4\u56DE\u7684\u5BF9\u8C61\u662F\u4E2A\u6570\u7EC4</span>

<span class="token keyword">const</span> p <span class="token operator">=</span>Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span>p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">//\u5982\u679C\u4E00\u4E2A\u6210\u529F p\u7684\u72B6\u6001\u4F1A\u53D8\u6210 resolved\uFF0C\u5982\u679C\u6709\u4E00\u4E2A\u9519\u8BEF \u90A3\u4E48\u5FC5\u987B\u5176\u4ED6\u5168\u90E8\u9519\u8BEF p\u7684\u72B6\u6001\u624D\u4F1A\u53D8\u6210rejected</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="async-await" tabindex="-1"><a class="header-anchor" href="#async-await" aria-hidden="true">#</a> async/await</h3><p><strong>1\u3001\u542B\u4E49</strong> \u4E00\u53E5\u8BDD\uFF0C\u5B83\u5C31\u662F Generator \u51FD\u6570\u7684\u8BED\u6CD5\u7CD6\u3002</p><ul><li>\u5185\u7F6E\u6267\u884C\u5668</li><li>\u66F4\u597D\u7684\u8BED\u4E49</li><li>\u66F4\u5E7F\u7684\u9002\u7528\u6027</li><li>\u8FD4\u56DE\u503C\u662F Promise</li></ul><p><strong>2\u3001\u8BED\u6CD5</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getStockPriceByName</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> symbol <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getStockSymbol</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> stockPrice <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getStockPrice</span><span class="token punctuation">(</span>symbol<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> stockPrice<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">getStockPriceByName</span><span class="token punctuation">(</span><span class="token string">&#39;goog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),o=[p];function c(i,l){return s(),a("div",null,o)}var r=n(e,[["render",c],["__file","Promise.html.vue"]]);export{r as default};
